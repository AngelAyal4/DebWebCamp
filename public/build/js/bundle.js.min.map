{"version":3,"sources":["horas.js","ponentes.js","tags.js"],"names":["document","querySelector","busqueda","categoria_id","dia","categoria","dias","querySelectorAll","inputHiddenDia","inputHiddenHora","terminoBusqueda","e","target","name","value","horaPrevia","classList","remove","Object","values","includes","async","url","respuesta","fetch","eventos","listadoHoras","forEach","li","add","hotasTomadas","map","evento","hora_id","listadoHorasArray","Array","from","filter","dataset","horaId","hora","addEventListener","seleccionarHora","obtenerHorasDisponibles","json","buscarEventos","ponentesInput","ponentes","ponentesFiltrados","listadoPonentes","ponenteHidden","seleccionarPonente","ponente","ponentePrevio","ponenteId","arrayPonentes","nombre","trim","apellido","id","formatearPonentes","obtenerPonentes","length","expresion","RegExp","toLowerCase","search","firstChild","removeChild","ponenteHTML","createElement","textContent","onclick","appendChild","noResultados","mostrarPonentes","obtenerPonente","ponenteDOM","tagsInput","tagsDiv","tagsInputHidden","tags","mostrarTags","tag","etiqueta","ondblclick","eliminiartag","actualizarInputHidden","toString","split","keyCode","preventDefault"],"mappings":"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","file":"bundle.js","sourcesContent":["(function(){\n    const horas = document.querySelector('#horas');\n\n    if(horas){\n\n        let busqueda = {\n            categoria_id: '',\n            dia: ''\n        }\n\n        const categoria = document.querySelector('[name=\"categoria_id\"]');\n        const dias = document.querySelectorAll('[name=\"dia\"]');\n        const inputHiddenDia =  document.querySelector('[name=\"dia_id\"]');\n        const inputHiddenHora = document.querySelector('[name=\"hora_id\"]');\n\n\n        categoria.addEventListener('change', terminoBusqueda);\n        dias.forEach(dia => {\n            dia.addEventListener('click', terminoBusqueda);\n        });\n\n        function terminoBusqueda(e){\n\n            busqueda[e.target.name] = e.target.value;\n\n            //Reiniciar los campos ocultos y el selector de horas\n            inputHiddenDia.value = '';\n            inputHiddenHora.value = '';\n            const horaPrevia = document.querySelector('.horas__hora--seleccionada');\n            if(horaPrevia){\n                horaPrevia.classList.remove('horas__hora--seleccionada');\n            }\n\n\n\n\n            if(Object.values(busqueda).includes('')){\n                return;\n            }\n            buscarEventos();\n\n        }\n        async function buscarEventos(){\n\n            const { categoria_id, dia } = busqueda;\n            const url = `/api/eventos-horarios?categoria_id=${categoria_id}&dia=${dia}`;\n            const respuesta = await fetch(url);\n            const eventos = await respuesta.json();\n\n\n\n            obtenerHorasDisponibles(eventos);\n\n        }\n\n        function obtenerHorasDisponibles(eventos){\n\n            //Reiniciar las horas\n            const listadoHoras = document.querySelectorAll('#horas li');\n            listadoHoras.forEach(li => li.classList.add('horas__hora--deshabilitada'));\n\n\n            const hotasTomadas =  eventos.map(evento => evento.hora_id);\n            const listadoHorasArray = Array.from(listadoHoras);\n\n            const resultado = listadoHorasArray.filter(li => !hotasTomadas.includes(li.dataset.horaId));\n            resultado.forEach(li => li.classList.remove('horas__hora--deshabilitada'));\n\n            const horasDisponibles = document.querySelectorAll('#horas li:not(.horas__hora--deshabilitada)');\n            horasDisponibles.forEach(hora => {hora.addEventListener('click', seleccionarHora)});\n        }\n\n        function seleccionarHora(e){\n            //Desabilitar la hora previa si hay un nuevo click\n            const horaPrevia = document.querySelector('.horas__hora--seleccionada');\n            if(horaPrevia){\n                horaPrevia.classList.remove('horas__hora--seleccionada');\n            }\n\n            //Argegar clase de seleccionado\n            e.target.classList.add('horas__hora--seleccionada');\n\n            inputHiddenHora.value = e.target.dataset.horaId; // <-- Cambia aquí\n\n            //LLenar el campo oculto de dia\n            inputHiddenDia.value = document.querySelector('[name=\"dia\"]:checked').value;\n\n        }\n        \n    }\n})();","(function() {\n    const ponentesInput = document.querySelector('#ponentes');\n\n    if(ponentesInput) {\n        let ponentes = [];\n        let ponentesFiltrados = [];\n\n        const listadoPonentes = document.querySelector('#listado-ponentes')\n        const ponenteHidden = document.querySelector('[name=\"ponente_id\"]')\n\n        obtenerPonentes();\n        ponentesInput.addEventListener('input', buscarPonentes)\n\n        if(ponenteHidden.value) {\n           (async() => {\n                const ponente = await obtenerPonente(ponenteHidden.value)\n                const { nombre, apellido} = ponente\n\n                // Insertar en el HTML\n                const ponenteDOM = document.createElement('LI');\n                ponenteDOM.classList.add('listado-ponentes__ponente', 'listado-ponentes__ponente--seleccionado');\n                ponenteDOM.textContent = `${nombre} ${apellido}`\n\n                listadoPonentes.appendChild(ponenteDOM)\n           })()\n        }\n\n        async function obtenerPonentes() {\n            const url = `/api/ponentes`;\n            const respuesta = await fetch(url);\n            const resultado = await respuesta.json();\n            formatearPonentes(resultado)\n        }\n\n        async function obtenerPonente(id) {\n            const url = `/api/ponente?id=${id}`;\n            const respuesta = await fetch(url)\n            const resultado = await respuesta.json()\n            return resultado;\n        }\n\n        function formatearPonentes(arrayPonentes = []) {\n            ponentes = arrayPonentes.map( ponente => {\n                return {\n                    nombre: `${ponente.nombre.trim()} ${ponente.apellido.trim()}`,\n                    id: ponente.id\n                } \n            })\n        }\n\n        function buscarPonentes(e) {\n            const busqueda = e.target.value;\n\n            if(busqueda.length > 3) {\n                const expresion = new RegExp(busqueda, \"i\");\n                ponentesFiltrados = ponentes.filter(ponente => {\n                    if(ponente.nombre.toLowerCase().search(expresion) != -1) {\n                        return ponente\n                    }\n                })\n            } else {\n                ponentesFiltrados = []\n            }\n\n            mostrarPonentes();\n        }\n\n        function mostrarPonentes() {\n\n            while(listadoPonentes.firstChild) {\n                listadoPonentes.removeChild(listadoPonentes.firstChild)\n            }\n\n            if(ponentesFiltrados.length > 0) {\n                ponentesFiltrados.forEach(ponente => {\n                    const ponenteHTML = document.createElement('LI');\n                    ponenteHTML.classList.add('listado-ponentes__ponente')\n                    ponenteHTML.textContent = ponente.nombre;\n                    ponenteHTML.dataset.ponenteId = ponente.id\n                    ponenteHTML.onclick = seleccionarPonente\n\n                    // Añadir al dom\n                    listadoPonentes.appendChild(ponenteHTML)\n                })\n            } else {\n                const noResultados = document.createElement('P')\n                noResultados.classList.add('listado-ponentes__no-resultado')\n                noResultados.textContent = 'No hay resultados para tu búsqueda'\n                listadoPonentes.appendChild(noResultados)              \n            }\n        }\n\n        function seleccionarPonente(e) {\n            const ponente = e.target;\n\n            // Remover la clase previa\n            const ponentePrevio = document.querySelector('.listado-ponentes__ponente--seleccionado')\n            if(ponentePrevio) {\n                ponentePrevio.classList.remove('listado-ponentes__ponente--seleccionado')\n            }\n            ponente.classList.add('listado-ponentes__ponente--seleccionado')\n\n            ponenteHidden.value = ponente.dataset.ponenteId\n        }\n    }\n})();","(function(){\n    const tagsInput = document.querySelector('#tags_input')\n\n    if(tagsInput){\n\n        const tagsDiv = document.querySelector('#tags');\n        const tagsInputHidden = document.querySelector('[name=\"tags\"]')\n\n        let tags = [];\n\n        //Recuperar del input oculto\n        if(tagsInputHidden.value.length !== ''){\n            tags = tagsInputHidden.value.split(',');\n            mostrarTags();\n        }\n\n\n        //Escuchar los cambios en el input\n        tagsInput.addEventListener('keypress', guardarTag);\n\n        function guardarTag(e) {\n            if (e.keyCode === 44) {\n                if (e.target.value.trim() === '' || e.target.value < 1) {\n                    return;\n                }\n            e.preventDefault();\n\n            tags = [...tags, e.target.value.trim()];\n            tagsInput.value = '';\n\n            mostrarTags();\n            }\n        }\n\n        function mostrarTags(){\n            tagsDiv.textContent = '';\n            tags.forEach(tag => {\n                const etiqueta =  document.createElement('LI');\n                etiqueta.classList.add('formulario__tag')\n                etiqueta.textContent = tag;\n                etiqueta.ondblclick = eliminiartag\n                tagsDiv.appendChild(etiqueta)\n            })\n\n            actualizarInputHidden();\n        }\n\n        function eliminiartag(e){\n            e.target.remove()\n            tags = tags.filter(tag => tag !== e.target.textContent)\n            actualizarInputHidden();\n        }\n\n        function actualizarInputHidden(){\n            tagsInputHidden.value = tags.toString();\n        }\n    }\n})()"]}